name: Deployment

on:
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run.'
        required: true
        default: 'test'

jobs:  
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'test'}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: run basic tests
      env:
        APIKEY: ${{ secrets.apiKey }}
        USERNAME: ${{ secrets.username }}
        PASSWORD: ${{ secrets.password }}
      run: mvn -B clean compile package -P basic -Dapplitools.apiKey=${{ secrets.apiKey }} -Dusername=${{ secrets.username }} -Dpassword=${{ secrets.password }} allure:report
    - uses: actions/upload-artifact@v1
      with:
          name: allure-report-basic
          path: target/site
    - name: run test with valid api key in 2 threads and assert single batch created
      env:
        APIKEY: ${{ secrets.apiKey }}
        USERNAME: ${{ secrets.username }}
        PASSWORD: ${{ secrets.password }}
      run: |
        mvn -B clean compile package -P run-tests-in-parallel-threads -Dapplitools.apiKey=${{ secrets.apiKey }}
        mvn -B compile package -Dtest=OneBatchOnParallelTest -Dapplitools.apiKey=${{ secrets.apiKey }} allure:report
    - uses: actions/upload-artifact@v1
      with:
          name: allure-report-parallel-run
          path: target/site
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'deploy'}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Customize Maven repo settings
      run: cp .github/workflows/settings.xml ~/.m2
    - name: Install GPG key  
      run: echo "${{ secrets.GPG_KEY }}" | gpg --batch --import
    - name: Deploy
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        apiKey: ${{ secrets.apiKey }}
        username: ${{ secrets.username }}
        password: ${{ secrets.password }}
      run: mvn -B deploy
 
